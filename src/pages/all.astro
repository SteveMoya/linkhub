---
import Layout from "../layouts/Layout.astro";
import { Card } from "../components/card/Card";
import cheerio from "cheerio";
import type { Resource } from "../interfaces/resource.interface";
import { getResources } from "../utils";

// TODO: Handle errors (use try catch )

const CSV_URL =
  "https://raw.githubusercontent.com/doneber/linkhub/main/public/resources.csv";

const resources = (await getResources(CSV_URL)) as Resource[];

// TODO: Cachear las peticiones
const getImageOG = async (url: string) => {
  const response = await fetch(url);
  if (!response.ok) {
    throw new Error(`Error en la solicitud HTTP: ${response.status}`);
  }
  const html = await response.text();
  const $ = cheerio.load(html);
  const ogImage = $('meta[property="og:image"]').attr("content");
  return ogImage;
};

const fullResourcesData = await Promise.all(
  resources.map(async (resource) => {
    const ogImage = await getImageOG(resource.url);
    return {
      ...resource,
      ogImage,
    };
  })
);
---

<Layout title="LinkHub">
  <p class="text-description">Todas las herramientas estan listadas aqu√≠:</p>
  <ul role="list" class="link-card-grid">
    {
      fullResourcesData.map((resource) => (
        <Card
          href={resource.url}
          title={resource.title}
          description={resource.description}
          imageUrl={resource.ogImage}
        />
      ))
    }
  </ul>
</Layout>

<style>
  .text-description {
    font-size: 1.4rem;
  }
</style>
